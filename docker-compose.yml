version: "3.8"
services:
  permissions-service:
    container_name: permissions-service
    build:
      context: .
      dockerfile: permissions-service/Dockerfile
    ports:
      - 50051:50051
    volumes:
      - ./permissions-service:/permissions-service
    env_file:
      - .env
    command: python main.py
    networks:
      - microservices
    depends_on:
      - permissions-database

  permissions-database:
    container_name: permissions-database
    image: postgres
    expose:
      - ${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - permissions-database:/var/lib/postgresql/data
      - ./permissions-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    hostname: ${DATABASE_HOST}
    env_file:
      - .env
    command: -p ${POSTGRES_PORT}
    networks:
      - microservices

  insights-service:
    container_name: insights-service
    build:
      context: .
      dockerfile: insights-service/Dockerfile
    ports:
      - 5000:8000
    volumes:
      - ./insights-service:/insights-service
    command: uvicorn main:app --host 0.0.0.0 --reload
    networks:
      - microservices
    depends_on:
      - kong

  channels-service:
    container_name: channels-service
    build:
      context: .
      dockerfile: channels-service/Dockerfile
    ports:
      - 8080:8080
    volumes:
      - ./channels-service:/channels-service
    command: ./mvnw spring-boot:run
    networks:
      - microservices
    depends_on:
      - kong

  kong:
    container_name: kong
    networks:
      - microservices
    image: kong/kong-gateway:2.8.0.0-alpine
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
      - "8443:8443"
    environment:
      KONG_DATABASE: "off"
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_DECLARATIVE_CONFIG: "/opt/kong/declarative/kong.yml"
      NGINX_UPSTREAM_CONNECT_TIMEOUT: 5000
    volumes:
      - ./kong:/opt/kong/declarative/

volumes:
  permissions-database:
networks:
  microservices:
    external: false