# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: permission.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10permission.proto\x12\npermission\" \n\rPolicyRequest\x12\x0f\n\x07user_id\x18\x01 \x01(\x05\"-\n\x0bPolicyReply\x12\x0e\n\x06object\x18\x01 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x02 \x01(\t\"K\n\rPoliciesReply\x12\x0f\n\x07user_id\x18\x01 \x01(\x05\x12)\n\x08policies\x18\x02 \x03(\x0b\x32\x17.permission.PolicyReply2Q\n\nPermission\x12\x43\n\x0bGetPolicies\x12\x19.permission.PolicyRequest\x1a\x19.permission.PoliciesReplyb\x06proto3')



_POLICYREQUEST = DESCRIPTOR.message_types_by_name['PolicyRequest']
_POLICYREPLY = DESCRIPTOR.message_types_by_name['PolicyReply']
_POLICIESREPLY = DESCRIPTOR.message_types_by_name['PoliciesReply']
PolicyRequest = _reflection.GeneratedProtocolMessageType('PolicyRequest', (_message.Message,), {
  'DESCRIPTOR' : _POLICYREQUEST,
  '__module__' : 'permission_pb2'
  # @@protoc_insertion_point(class_scope:permission.PolicyRequest)
  })
_sym_db.RegisterMessage(PolicyRequest)

PolicyReply = _reflection.GeneratedProtocolMessageType('PolicyReply', (_message.Message,), {
  'DESCRIPTOR' : _POLICYREPLY,
  '__module__' : 'permission_pb2'
  # @@protoc_insertion_point(class_scope:permission.PolicyReply)
  })
_sym_db.RegisterMessage(PolicyReply)

PoliciesReply = _reflection.GeneratedProtocolMessageType('PoliciesReply', (_message.Message,), {
  'DESCRIPTOR' : _POLICIESREPLY,
  '__module__' : 'permission_pb2'
  # @@protoc_insertion_point(class_scope:permission.PoliciesReply)
  })
_sym_db.RegisterMessage(PoliciesReply)

_PERMISSION = DESCRIPTOR.services_by_name['Permission']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _POLICYREQUEST._serialized_start=32
  _POLICYREQUEST._serialized_end=64
  _POLICYREPLY._serialized_start=66
  _POLICYREPLY._serialized_end=111
  _POLICIESREPLY._serialized_start=113
  _POLICIESREPLY._serialized_end=188
  _PERMISSION._serialized_start=190
  _PERMISSION._serialized_end=271
# @@protoc_insertion_point(module_scope)
